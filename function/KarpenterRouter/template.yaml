AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  KarpenterRouter

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  ClusterName:
    Type: String
    Description: Name of EKS Cluster

Resources:
  KarpenterRouterFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: app.handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref ClusterMappingTable
      Policies:
      - DynamoDBReadPolicy:
          TableName: !Ref ClusterMappingTable
      - Statement:
        - Sid: SQSSendMessagePolicy
          Effect: Allow
          Action:
          - sqs:SendMessage
          Resource: '*'
      - Statement:
        - Sid: EC2DescribeInstancePolicy
          Effect: Allow
          Action:
          - ec2:DescribeInstances
          Resource: '*'
      Events:
        ScheduledChangeRule:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - aws.health
              detail-type:
                - AWS Health Event
            DeadLetterConfig:
              Arn: !GetAtt EBRuleDLQ.Arn
        SpotInterruptionRule:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - aws.ec2
              detail-type:
                - EC2 Spot Instance Interruption Warning
            DeadLetterConfig:
              Arn: !GetAtt EBRuleDLQ.Arn
        InstanceStateChangeRule:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - aws.ec2
              detail-type:
                - EC2 Instance State-change Notification
              detail:
                state:
                  - "anything-but":
                    - "pending"
                    - "running"
            DeadLetterConfig:
              Arn: !GetAtt EBRuleDLQ.Arn
  EBRuleDLQ:
    Type: AWS::SQS::Queue
  ClusterMappingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: ClusterName
          AttributeType: S
        - AttributeName: QueueUrl
          AttributeType: S
      KeySchema:
        - AttributeName: ClusterName
          KeyType: HASH
        - AttributeName: QueueUrl
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
  FISLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: 'fis-log-group'
  FISExperiment:
    Type: AWS::FIS::ExperimentTemplate
    Properties:
      Description: A Fault Injection Simulator experiment for testing spot instance interruptions.
      Actions:
        spotInstanceinterruption:
          ActionId: 'aws:ec2:send-spot-instance-interruptions'
          Parameters:
            durationBeforeInterruption: 'PT2M'
          Targets:
            SpotInstances: spotInTargetCluster
      Targets:
        spotInTargetCluster:
          ResourceTags:
            aws:eks:cluster-name : !Sub '${ClusterName}'
          ResourceType: 'aws:ec2:spot-instance'
          SelectionMode: COUNT(1)
      RoleArn: !GetAtt FISRole.Arn
      StopConditions:
        - Source: 'none'
      Tags:
        Name: !Sub 'SpotInterruptionTest-${ClusterName}'
      LogConfiguration:
        LogSchemaVersion: 1
        CloudWatchLogsConfiguration:
          LogGroupArn: !GetAtt FISLogGroup.Arn
  FISRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 'fis.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Sub "arn:aws:iam::aws:policy/service-role/AWSFaultInjectionSimulatorEC2Access"
      Policies:
      - PolicyName: FISCloudWatchPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - logs:*
              Resource: '*'
Outputs:
  KarpenterRouterFunction:
    Description: "Karpenter Router Lambda Function ARN"
    Value: !GetAtt KarpenterRouterFunction.Arn
  ClusterMappingTable:
    Description: "DynamoDB Tables to map EKS cluster to SQS queues"
    Value: !GetAtt ClusterMappingTable.Arn
